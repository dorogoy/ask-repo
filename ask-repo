#!/bin/bash

# Default repository
DEFAULT_REPO="gitmcp.io/docs"

# Function to show usage
usage() {
  echo "Usage: ask-repo [github_url|user/repo]"
  echo "Ask questions to AI agents about the full content of public GitHub repositories."
  echo ""
  echo "Supported formats:"
  echo "  - github.com/user/repo"
  echo "  - https://github.com/user/repo"
  echo "  - user/repo"
  echo ""
  echo "If no repository is provided, it defaults to: $DEFAULT_REPO"
  echo ""
  echo "Examples:"
  echo "  ask-repo # Uses the default repository"
  echo "  ask-repo dorogoy/ask-repo"
  echo "  ask-repo https://github.com/dorogoy/ask-repo.git"
  exit 1
}

# Check for help flag
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
  usage
fi

# Check if goose is installed
if ! command -v goose &> /dev/null; then
  echo "Error: goose is not installed or not in your PATH."
  echo "Please install it to use this script."
  exit 1
fi

REPO_INPUT="$1"
REPO_URL=""

# If no input, use the default
if [ -z "$REPO_INPUT" ]; then
  REPO_URL="$DEFAULT_REPO"
else
  # Normalize the input
  REPO_PATH=$(echo "$REPO_INPUT" | sed -E 's/^(https?:\/\/)?(www\.)?github\.com\///' | sed 's/\.git$//' | sed 's/\/$//')

  # Validate the format
  if [[ ! "$REPO_PATH" =~ ^[a-zA-Z0-9_-]+/[a-zA-Z0-9_-]+$ ]]; then
    echo "Error: Invalid repository format."
    usage
  fi
  REPO_URL="https://gitmcp.io/$REPO_PATH"
fi

# Confirmation message
echo "Endpoint: $REPO_URL"

# Execute goose session
goose session --with-remote-extension "$REPO_URL"

# Error handling for goose command
if [ $? -ne 0 ]; then
  echo "Error: goose command failed."
  exit 1
fi
